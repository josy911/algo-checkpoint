// procedure to calculate the dot product of 2 vectors
PROCEDURE dot_product (VAR v1, VAR v2)          // procedure name and parameters

// declare local variables
VAR
    i, ps = INTEGER :=0                                          
BEGIN
//check if length of vectors are equal then loop through array elements to multiply and get dot product
    IF (v1.length == v2.length) THEN
        FOR i FROM 0 TO v1.length-1 STEP 1  DO
            ps = ps + v1[i] * v2[i]
        END_FOR
    END_IF
END


// algorithm to take determine whether two vectors of given are orthogonal
ALGORITHM orthogonal_procedure
//declaration of global variables
VAR
    vector_pairs : ARRAY_OF INTEGER[20][2];
    i, j, n, ps = INTEGER

BEGIN
    // to get number of vector pairs (between 1 and 20) from the user
    REPEAT
        Write ("Enter number of vectors pairs between 1 and 20:")
        Read ("n")
    UNTIL (a > 0 AND a <= 20)
    
    //loop through array elements to allow user enter vector pairs

    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM 0 TO 1 STEP 1  DO
            // enter elements of vector pairs [i][j]
            Read (vector_pairs[i][j])
        END_FOR
    END_FOR

    // loop through vector pairs to check for orthogonality
    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM 1 TO n-1 STEP step  DO
            IF (i<>j) THEN                                          // to ensure a vector pair is not multiplied by itself
                dot_product (vector_pairs[i], vector_pairs[j])      // call procedure to get dot product of 2 vector pairs
                IF (ps = 0) THEN                                    //
                    Write ("Vector Pairs ", i " and ", j " are orthogonal")     // if vectors are orthogonal, write msg 
                END_IF
            END_IF
        END_FOR
    END_FOR
END


